---
# tasks file for sql-server
#Sets up and insalls everything via chocolatey

- name: ensure that a reboot is not pending
  when: ansible_reboot_pending
  debug:
    msg: 'Pending reboot detected'
  changed_when: true
  notify: reboot windows
  
- meta: flush_handlers

- name: standard software (all sql servers) via package manager
  win_chocolatey:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ software_1 }}"
  ignore_errors: yes
  when: ansible_os_family == "Windows"

- name: standard software (data-and-analytics) via package manager part 2
  win_chocolatey:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ software_2 }}"
  ignore_errors: yes
  when: ansible_os_family == "Windows" and ansible_facts.system_info.local_facts.server_owner == "data-and-analytics"

- name: ensure that a reboot is not pending
  when: ansible_reboot_pending
  debug:
    msg: 'Pending reboot detected'
  changed_when: true
  notify: reboot windows

- meta: flush_handlers

- name: standard software (data-and-analytics) via package manager part 3
  win_chocolatey:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ software_3 }}"
  ignore_errors: yes
  when: ansible_os_family == "Windows" and ansible_facts.system_info.local_facts.server_owner == "data-and-analytics"

- name: ensure that a reboot is not pending
  when: ansible_reboot_pending
  debug:
    msg: 'Pending reboot detected'
  changed_when: true
  notify: reboot windows

- meta: flush_handlers

- name: standard software (data-and-analytics) via package manager part 4
  win_chocolatey:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ software_4 }}"
  ignore_errors: yes
  when: ansible_os_family == "Windows" and ansible_facts.system_info.local_facts.server_owner == "data-and-analytics"


- name: standard software (data-and-analytics) via package manager Python 3.7.7
  win_chocolatey:
    name: python
    version: 3.7.7
    state: present
  when: ansible_os_family == "Windows" and ansible_facts.system_info.local_facts.server_owner == "data-and-analytics"

